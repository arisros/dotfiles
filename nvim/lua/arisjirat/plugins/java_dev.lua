return {
	"mfussenegger/nvim-jdtls",
	ft = "java",
	dependencies = {
		"williamboman/mason.nvim",
		"neovim/nvim-lspconfig",
	},
}
-- return {
-- 	"mfussenegger/nvim-jdtls",
-- 	ft = { "java" },
-- 	config = function()
-- 		local jdtls = require("jdtls")
--
-- 		-- Find project root (looks for git, gradlew, mvnw)
-- 		local root_dir = vim.fs.dirname(vim.fs.find({ "gradlew", ".git", "mvnw" }, { upward = true })[1])
-- 		if not root_dir then
-- 			return
-- 		end
--
-- 		-- Workspace dir (used by jdtls for storing metadata)
-- 		local workspace_dir = vim.fn.stdpath("data")
-- 			.. "/site/java/workspace/"
-- 			.. vim.fn.fnamemodify(root_dir, ":p:h:t")
--
-- 		-- Start jdtls
-- 		jdtls.start_or_attach({
-- 			cmd = { vim.fn.stdpath("data") .. "/mason/bin/jdtls" },
-- 			root_dir = root_dir,
-- 			workspace_folder = workspace_dir,
-- 		})
-- 	end,
-- }
-- return {
-- 	"mfussenegger/nvim-jdtls",
-- 	ft = { "java" },
-- 	config = function()
-- 		-- local config = {
-- 		-- 	cmd = { "~/.local/share/nvim/mason/bin/jdtls" },
-- 		-- 	root_dir = vim.fs.dirname(vim.fs.find({ "gradlew", ".git", "mvnw" }, { upward = true })[1]),
-- 		-- }
-- 		-- require("jdtls").start_or_attach(config)
-- 	end,
-- }
-- return {
--
-- 	"mfussenegger/nvim-jdtls",
-- 	ft = { "java" },
-- 	config = function()
-- 		-- Set JAVA_HOME from SDKMAN (Java 17)
-- 		vim.env.JAVA_HOME = os.getenv("HOME") .. "/.sdkman/candidates/java/current"
-- 		vim.env.PATH = vim.env.JAVA_HOME .. "/bin:" .. vim.env.PATH
--
-- 		-- Use manually installed jdtls version (e.g., 1.20)
-- 		local jdtls_path = vim.fn.expand("~/.local/share/jdtls/jdtls")
--
-- 		local config = {
-- 			cmd = { jdtls_path .. "/bin/jdtls" },
-- 			root_dir = vim.fs.dirname(vim.fs.find({ "gradlew", ".git", "mvnw" }, { upward = true })[1]),
-- 		}
--
-- 		require("jdtls").start_or_attach(config)
-- 	end,
-- }
--
-- return {
-- "mfussenegger/nvim-jdtls",
-- ft = { "java" },
-- config = function()
-- 	-- Set JAVA_HOME from SDKMAN (Java 17)
-- 	vim.env.JAVA_HOME = os.getenv("HOME") .. "/.sdkman/candidates/java/current"
-- 	vim.env.PATH = vim.env.JAVA_HOME .. "/bin:" .. vim.env.PATH
--
-- 	-- Set up the workspace directory
-- 	local home = os.getenv("HOME")
-- 	local workspace_path = home .. "/.local/share/nvim/jdtls-workspace/"
-- 	local project_name = vim.fn.fnamemodify(vim.fn.getcwd(), ":p:h:t") -- Get project name from current directory
-- 	local workspace_dir = workspace_path .. project_name
--
-- 	-- Use manually installed jdtls version (e.g., 1.20)
-- 	local jdtls_path = vim.fn.expand("~/.local/share/jdtls/jdtls")
--
-- 	-- Define jdtls configuration
-- 	local config = {
-- 		cmd = { jdtls_path .. "/bin/jdtls" },
-- 		root_dir = vim.fs.dirname(vim.fs.find({ "gradlew", ".git", "mvnw" }, { upward = true })[1]),
-- 		settings = {
-- 			java = {
-- 				signatureHelp = { enabled = true },
-- 				-- extendedClientCapabilities = jdtls.extendedClientCapabilities,
-- 				maven = { downloadSources = true },
-- 				referencesCodeLens = { enabled = true },
-- 				references = { includeDecompiledSources = true },
-- 				inlayHints = {
-- 					parameterNames = { enabled = "all" },
-- 				},
-- 				format = { enabled = false },
-- 			},
-- 		},
-- 		init_options = {
-- 			bundles = {},
-- 		},
-- 		-- Set workspace location
-- 		-- init_options = {
-- 		-- 	workspace = workspace_dir,
-- 		-- },
-- 	}
--
-- 	-- Start or attach jdtls
-- 	require("jdtls").start_or_attach(config)
-- end,
-- }
